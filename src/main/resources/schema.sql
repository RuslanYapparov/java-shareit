DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS requests CASCADE;

CREATE TABLE IF NOT EXISTS users (
  user_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  country VARCHAR(100),                                                             -- поля embedded-класса UserAddress
  region VARCHAR(100),
  city_or_settlement VARCHAR(200),
  city_district VARCHAR(200),
  street VARCHAR(500),
  house_number INTEGER,                                                             -- поля embedded-класса UserAddress
  telephone_number VARCHAR(50),
  telephone_visible BOOLEAN,
  avatar_uri TEXT,
  created TIMESTAMP,
  last_modified TIMESTAMP,
  user_rating REAL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email),
  CONSTRAINT NOT_EMPTY_EMAIL_AND_NAME CHECK(email <> '' AND user_name <> '')
);

CREATE TABLE IF NOT EXISTS items (
  item_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id INTEGER NOT NULL,
  request_id INTEGER DEFAULT 0,
  item_name VARCHAR(255) NOT NULL,
  description VARCHAR(1000) NOT NULL,
  available BOOLEAN NOT NULL,
  rent REAL CHECK(rent >= 0),
  item_rating REAL,
  item_photo_uri TEXT,
  created TIMESTAMP,
  last_modified TIMESTAMP,
  CONSTRAINT pk_item PRIMARY KEY (item_id),
  CONSTRAINT fk_owner_id FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS bookings (
  booking_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id INTEGER NOT NULL,
  item_id INTEGER NOT NULL,
  status VARCHAR(15),
  booking_start TIMESTAMP,
  booking_end TIMESTAMP,
  created TIMESTAMP,
  last_modified TIMESTAMP,
  CONSTRAINT pk_booking PRIMARY KEY (booking_id),
  CONSTRAINT fk_booker_id FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_booked_item_id FOREIGN KEY (item_id) REFERENCES items(item_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
  comment_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id INTEGER NOT NULL,
  user_name VARCHAR(255) NOT NULL,
  item_id INTEGER NOT NULL,
  text VARCHAR(2000),
  created TIMESTAMP,
  last_modified TIMESTAMP,
  CONSTRAINT pk_comment PRIMARY KEY (comment_id),
  CONSTRAINT fk_commentator_id FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_comment_item_id FOREIGN KEY (item_id) REFERENCES items(item_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests (
  request_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  user_id INTEGER NOT NULL,
  description VARCHAR(2000) NOT NUll,
  created TIMESTAMP,
  last_modified TIMESTAMP,
  CONSTRAINT pk_request PRIMARY KEY (request_id),
  CONSTRAINT fk_requester_id FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);